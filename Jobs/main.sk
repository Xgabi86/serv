command /jobs [<text>] [<text>]:
    trigger:
        if arg-1 is "join":
            if {rank::%player%} is " ":
                if arg-2 is "miner":
                    set {rank::%player%} to "miner"
                    send "&aYou are now a &2miner." to player
                else if arg-2 is "hunter":
                    set {rank::%player%} to "hunter"
                    send "&aYou are now a &2hunter." to player
                else:
                    send "&cUnknown job." to player
                    send "&cAvailable jobs: &aminer&c, &ahunter&c." to player
            else if {rank::%player%} is not set:
                set {rank::%player%} to " "
                send "&cPlease retry." to player
            else:
                send "&cyou have already a jobs &6(&l%{rank::%player%}%&6)&c." to player
        else if arg-1 is "leave":
            if arg-2 is "miner":
                if {rank::%player%} is "miner":
                    set {rank::%player%} to " "
                    send "&6You are no longer a &eminer&6." to player
                else:
                    send "&cYou are not a miner." to player
            else if arg-2 is "hunter":
                if {rank::%player%} is "hunter":
                    set {rank::%player%} to " "
                    send "&6You are no longer a &ehunter&6." to player
                else:
                    send "&cYou are not a hunter." to player
            else:
                send "&cUnknown job." to player
                send "&cAvailable jobs: &aminer&c, &ahunter&c." to player
        else if arg-1 is "alert":
            if arg-2 is "on":
                set {jobs-alert::%player%} to "true"
                send "&6Alert job are enabled." to player
            else if arg-2 is "off":
                set {jobs-alert::%player%} to "false"
                send "&6Alert job are disabled." to player
            else:
                send "&cUknonwn argument." to player
                send "&cAvailable arguments: &aon&c, &aoff&c." to player
        else if arg-1 is "list":
            send "&aAvailable jobs: &eminer&a, &ehunter&a." to player
        else if arg-1 is "reload":
            if player has permission "jobs.reload":
                execute console command "sk reload /jobs/"
                send "&aJobs reloaded." to player
            else:
                send "&cYou don't have permission." to player
        else:
            send "&cUnknown command." to player
            send "&cAvailable commands: &ajoin&c, &aleave&c, &aalert&c, &alist&c." to player

on tab complete of "/jobs":
    set tab completions for position 1 to "alert" and "list"
    if {rank::%player%} is " ":
        set tab completions for position 1 to "list", "join" and "alert"
        if tab arg-1 = "join":
            set tab completions for position 2 to "miner" and "hunter"
    else if tab arg-1 = "alert":
        if {jobs-alert::%player%} is "false":
            set tab completions for position 2 to "on"
        else:
            set tab completions for position 2 to "off"
    else:
        set tab completions for position 1 to "list", "leave" and "alert"
        if tab arg-1 = "leave":
            if {rank::%player%} is "miner":
                set tab completions for position 2 to "miner"
            else if {rank::%player%} is "hunter":
                set tab completions for position 2 to "hunter"

command /setjoblevel <player> <integer>:
    permission: sever.ops
    trigger:
        set %player% to arg-1
        set {joblevel-miner-%player%} to arg-2
        send "&aLe joueur &e%player% &aest maintenant niveau &e{joblevel-miner-%player%}&a."